/* Modified Header Section */
body {
    display: grid;
    grid-template-columns: 40% 60%;
    min-height: 100vh;
    background: linear-gradient(45deg, #0a192f, #020c1b);
}

header {
    position: fixed;
    width: 40%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(10px);
    border-right: 2px solid var(--primary);
    box-shadow: 0 0 50px rgba(0, 255, 157, 0.2);
}

.profile-pic {
    width: 320px;
    height: 320px;
    border-radius: 50%;
    border: 4px solid var(--primary);
    box-shadow: 0 0 50px var(--primary);
    margin-bottom: 2rem;
    position: relative;
    overflow: hidden;
    transition: transform 0.5s ease;
}

.profile-pic::after {
    content: '';
    position: absolute;
    inset: -10px;
    background: linear-gradient(45deg, var(--primary), transparent 60%);
    z-index: -1;
    animation: rotate 6s linear infinite;
}

@keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.header-content {
    text-align: center;
}

header h1 {
    font-size: 4rem;
    line-height: 1.1;
    margin-bottom: 1rem;
    background: linear-gradient(45deg, var(--primary), #00ff9d 70%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 0 30px rgba(0, 255, 157, 0.4);
}

header p {
    font-size: 1.5rem;
    position: relative;
    display: inline-block;
}

/* Main Content Area */
main {
    grid-column: 2;
    padding: 4rem 2rem;
}

/* Glowing Border Effect */
section {
    position: relative;
    padding: 3rem;
    margin-bottom: 4rem;
    background: rgba(0, 0, 0, 0.6);
    border-radius: 15px;
    overflow: hidden;
}

section::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 15px;
    padding: 2px;
    background: linear-gradient(45deg, var(--primary), var(--secondary));
    -webkit-mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    animation: borderFlow 6s linear infinite;
}

@keyframes borderFlow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Add this JavaScript */
<script>
    // Initialize Splitting.js for text effects
    Splitting();

    // Parallax effect for profile picture
    document.addEventListener('mousemove', (e) => {
        const img = document.querySelector('.profile-pic');
        const x = (window.innerWidth - e.pageX) / 30;
        const y = (window.innerHeight - e.pageY) / 30;
        img.style.transform = `translate(${x}px, ${y}px)`;
    });

    // Initialize Three.js background
    import * as THREE from 'https://cdn.skypack.dev/three@0.136.0';
    
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ alpha: true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    // Add floating geometry
    const geometry = new THREE.IcosahedronGeometry(2, 2);
    const material = new THREE.MeshPhongMaterial({ 
        color: 0x00ff9d,
        transparent: true,
        opacity: 0.1
    });
    const icosahedron = new THREE.Mesh(geometry, material);
    scene.add(icosahedron);

    camera.position.z = 5;

    function animate() {
        requestAnimationFrame(animate);
        icosahedron.rotation.x += 0.01;
        icosahedron.rotation.y += 0.01;
        renderer.render(scene, camera);
    }
    animate();
</script>
